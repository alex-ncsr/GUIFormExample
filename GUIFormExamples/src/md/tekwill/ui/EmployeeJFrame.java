/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package md.tekwill.ui;

import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import md.tekwill.model.Department;
import md.tekwill.model.Employee;
import md.tekwill.service.EmployeeService;
import md.tekwill.exceptions.EmployeeValidationException;

import java.time.format.DateTimeFormatter;
import java.util.List;

/**
 * @author user
 */
public class EmployeeJFrame extends javax.swing.JFrame {

    private EmployeeService employeeService = new EmployeeService();

    private DefaultTableModel defaultTableModel = new DefaultTableModel(new Object[][]{},
            new String[]{
                    "ID", "Name", "Last name", "Department", "createdDate", "updatedDate"
            });

    private DefaultComboBoxModel defaultComboBoxModel = new DefaultComboBoxModel<>(
            new String[]{
                    "IT", "Sales", "Management", "Logistic"
            });

    /**
     * Creates new form EmployeeJFrame
     */
    public EmployeeJFrame() {
        initComponents();
        jTableEmployee.setModel(defaultTableModel);
        jComboBoxDepartment.setModel(defaultComboBoxModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelId = new javax.swing.JLabel();
        jTextFieldId = new javax.swing.JTextField();
        jLabelName = new javax.swing.JLabel();
        jTextFieldName = new javax.swing.JTextField();
        jLabelLastName = new javax.swing.JLabel();
        jTextFieldLastName = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableEmployee = new javax.swing.JTable();
        jButtonSave = new javax.swing.JButton();
        jButtonSearch = new javax.swing.JButton();
        jButtonUpdate = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jComboBoxDepartment = new javax.swing.JComboBox<>();
        jTextFieldDepartment = new javax.swing.JLabel();
        jTextFieldFiltrationById = new javax.swing.JTextField();
        jTextFieldFiltrationByName = new javax.swing.JTextField();
        jTextFieldFiltrationByLastName = new javax.swing.JTextField();
        jTextFieldFiltrationByDepartment = new javax.swing.JTextField();
        jButtonFiltrationById = new javax.swing.JButton();
        jButtonFiltrationByName = new javax.swing.JButton();
        jButtonFiltrationByLastName = new javax.swing.JButton();
        jButtonFiltrationByDepartment = new javax.swing.JButton();
        jButtonFilterReset = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(500, 100));

        jLabelId.setText("ID:");

        jLabelName.setText("Name:");

        jTextFieldName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNameActionPerformed(evt);
            }
        });

        jLabelLastName.setText("Last name:");

        jTableEmployee.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Last name", "Department", "createDate", "updateDate"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableEmployee);

        jButtonSave.setText("Save");
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });

        jButtonSearch.setText("Search");
        jButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchActionPerformed(evt);
            }
        });

        jButtonUpdate.setText("Update");
        jButtonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateActionPerformed(evt);
            }
        });

        jButtonDelete.setText("Delete");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        jComboBoxDepartment.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "[---Select One---]", "IT", "Sales", "Management", "Logistic" }));
        jComboBoxDepartment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxDepartmentActionPerformed(evt);
            }
        });

        jTextFieldDepartment.setText("Department");

        jTextFieldFiltrationById.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldFiltrationByIdActionPerformed(evt);
            }
        });

        jTextFieldFiltrationByLastName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldFiltrationByLastNameActionPerformed(evt);
            }
        });

        jTextFieldFiltrationByDepartment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldFiltrationByDepartmentActionPerformed(evt);
            }
        });

        jButtonFiltrationById.setText("FbyId");
        jButtonFiltrationById.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFiltrationByIdActionPerformed(evt);
            }
        });

        jButtonFiltrationByName.setText("FbyName");
        jButtonFiltrationByName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFiltrationByNameActionPerformed(evt);
            }
        });

        jButtonFiltrationByLastName.setText("FbyLastName");
        jButtonFiltrationByLastName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFiltrationByLastNameActionPerformed(evt);
            }
        });

        jButtonFiltrationByDepartment.setText("FbyDep");
        jButtonFiltrationByDepartment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFiltrationByDepartmentActionPerformed(evt);
            }
        });

        jButtonFilterReset.setText("Reset filter");
        jButtonFilterReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFilterResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabelLastName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabelId, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabelName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
                                    .addComponent(jTextFieldDepartment, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE))
                                .addGap(42, 42, 42)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldId, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jComboBoxDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jButtonFilterReset, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addComponent(jButtonFiltrationById, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(jButtonFiltrationByName, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jButtonFiltrationByLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addComponent(jButtonSave, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(jButtonSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(26, 26, 26)
                                            .addComponent(jButtonUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButtonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButtonFiltrationByDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 586, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jTextFieldFiltrationById, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldFiltrationByName, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldFiltrationByLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldFiltrationByDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(85, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelId)
                    .addComponent(jTextFieldId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldDepartment)
                    .addComponent(jComboBoxDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldFiltrationById, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldFiltrationByName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldFiltrationByLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldFiltrationByDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSave)
                    .addComponent(jButtonSearch)
                    .addComponent(jButtonUpdate)
                    .addComponent(jButtonDelete))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonFiltrationById)
                    .addComponent(jButtonFiltrationByName)
                    .addComponent(jButtonFiltrationByLastName)
                    .addComponent(jButtonFiltrationByDepartment))
                .addGap(18, 18, 18)
                .addComponent(jButtonFilterReset)
                .addGap(29, 29, 29))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {

        Employee employee = new Employee(jTextFieldName.getText(), jTextFieldLastName.getText());
        Department department = new Department(jComboBoxDepartment.getSelectedItem().toString());
        employee.setDepartment(department);
//        boolean isEmployeeCreated = employeeService.create(employee);



        boolean isEmployeeCreated = false;
        try {
            isEmployeeCreated = employeeService.create(employee);

            if (isEmployeeCreated) {
                Employee foundEmployee = employeeService.read(employee.getId());
                defaultTableModel.addRow(new Object[]{foundEmployee.getId(),
                        foundEmployee.getName(), foundEmployee.getLastName(),
                        department.getName(),foundEmployee.getCreatedDate().format(formatter)});
                showEmployees(employee);
//                defaultTableModel.setValueAt(employeeService.timeNow(), foundEmployee.getId(),4);

            }

        } catch (EmployeeValidationException e) {
            showMessageDialog(e);
        } catch (Exception exception) {
            showMessageDialog(exception);
        }


        clearFields();
    }

    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd.MM HH:mm:ss");

    private void showMessageDialog(Exception exception) {
        JOptionPane.showMessageDialog(this,
                exception.getMessage(),
                "ERROR",
                JOptionPane.ERROR_MESSAGE);
    }

    private void showMessageDialog() {
        JOptionPane.showMessageDialog(this,
                "Employee with this id doesn't exist! Please try again!",
                "ERROR",
                JOptionPane.ERROR_MESSAGE);
    }


    private void jButtonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchActionPerformed
        Employee foundEmployee = employeeService.read(Integer.parseInt(jTextFieldId.getText()));
        if (foundEmployee == null) {
            showMessageDialog();
        }

        jTextFieldName.setText(foundEmployee.getName());
        jTextFieldLastName.setText(foundEmployee.getLastName());
//        jTextFieldDepartment.setText(foundEmployee.getDepartment().getName());
        jComboBoxDepartment.setSelectedItem(foundEmployee.getDepartment().getName());


        showEmployees(foundEmployee);
    }//GEN-LAST:event_jButtonSearchActionPerformed


    private void jButtonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateActionPerformed
        // TODO add your handling code here:
        Employee foundEmployee = employeeService.read(Integer.parseInt(jTextFieldId.getText()));
        if (foundEmployee == null) {
            showMessageDialog();
        }
        Department department = new Department(jComboBoxDepartment.getSelectedItem().toString());
        foundEmployee.setName(jTextFieldName.getText());
        foundEmployee.setLastName(jTextFieldLastName.getText());
        foundEmployee.setDepartment(department);

        employeeService.update(Integer.parseInt(jTextFieldId.getText()), foundEmployee);

        for (int i = 0; i < defaultTableModel.getRowCount(); i++) {
            if (defaultTableModel.getValueAt(i, 0).equals(Integer.valueOf(jTextFieldId.getText()))) {
                defaultTableModel.setValueAt(jTextFieldName.getText(), i, 1);
                defaultTableModel.setValueAt(jTextFieldLastName.getText(), i, 2);
                defaultTableModel.setValueAt(jComboBoxDepartment.getSelectedItem().toString(), i, 3);
                defaultTableModel.setValueAt(foundEmployee.getUpdatedDate().format(formatter),i,5);
            }
        }
        showEmployees(foundEmployee);

    }//GEN-LAST:event_jButtonUpdateActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {
        Employee foundEmployee = employeeService.read(Integer.parseInt(jTextFieldId.getText()));

        if (foundEmployee == null) {
            showMessageDialog();
        }

        System.out.println("Employee with id " + foundEmployee.getId() + " was deleted");
        foundEmployee = null;
        System.out.println(foundEmployee);

        employeeService.delete(Integer.parseInt(jTextFieldId.getText()));

//        employeeService.listEmployees();

        clearFields();

        for (int i = 0; i < defaultTableModel.getRowCount(); i++) {
            if (defaultTableModel.getValueAt(i, 0).equals(Integer.valueOf(jTextFieldId.getText()))) {
                defaultTableModel.removeRow(i);
            }
        }
    }

    private void jComboBoxDepartmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxDepartmentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxDepartmentActionPerformed

    private void jTextFieldFiltrationByDepartmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldFiltrationByDepartmentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldFiltrationByDepartmentActionPerformed

    private void jTextFieldFiltrationByLastNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldFiltrationByLastNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldFiltrationByLastNameActionPerformed

    private void jTextFieldFiltrationByIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldFiltrationByIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldFiltrationByIdActionPerformed

    private void jTextFieldNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNameActionPerformed

    private void jButtonFilterResetActionPerformed(java.awt.event.ActionEvent evt) {

        defaultTableModel.setRowCount(0);
        fillTableModel(employeeService.getAll());

        System.out.println("==========================================================");
        System.out.println("Filtration reset");
        System.out.println(employeeService.getAll());


    }

    private void jButtonFiltrationByIdActionPerformed(java.awt.event.ActionEvent evt) {

        List<Employee> employeeList = employeeService.filtrationById(
                employeeService.getAll(), Integer.valueOf(jTextFieldFiltrationById.getText()));


        defaultTableModel.setRowCount(0);
        fillTableModel(employeeList);
    }

    private void jButtonFiltrationByNameActionPerformed(java.awt.event.ActionEvent evt) {

        List<Employee> employeeList = employeeService.filtrationByName(employeeService.getAll(), jTextFieldFiltrationByName.getText());

        defaultTableModel.setRowCount(0);
        fillTableModel(employeeList);
    }


    private void jButtonFiltrationByLastNameActionPerformed(java.awt.event.ActionEvent evt) {

        List<Employee> employeeList = employeeService.filtrationByName(employeeService.getAll(), jTextFieldFiltrationByLastName.getText());

        defaultTableModel.setRowCount(0);
        fillTableModel(employeeList);
    }

    private void jButtonFiltrationByDepartmentActionPerformed(java.awt.event.ActionEvent evt) {

//        Department department = new Department(jTextFieldFiltrationByDepartment.getText());

        List<Employee> employeeList = employeeService.filtrationByDepartment(employeeService.getAll(), jTextFieldFiltrationByDepartment.getText());
        defaultTableModel.setRowCount(0);
        fillTableModel(employeeList);
    }

    private void fillTableModel(List<Employee> employeeList) {
        for (Employee employee : employeeList) {
            defaultTableModel.addRow(new Object[]{employee.getId(),
                    employee.getName(), employee.getLastName(), employee.getDepartment().getName()});
        }
    }

    private void showEmployees(Employee employee) {
        System.out.println("ID:" + employee.getId());
        System.out.println("NAME:" + employee.getName());
        System.out.println("LAST_NAME:" + employee.getLastName());
        System.out.println("DEPARTMENT:" + employee.getDepartment());
    }

    private void clearFields() {
        jTextFieldName.setText("");
        jTextFieldLastName.setText("");
    }

//    private void displayEmployee(Employee foundEmployee) {
//        jLabelIdDisplay.setText("" + foundEmployee.getId());
//        jLabelNameDisplay.setText(foundEmployee.getName());
//        jLabelLastNameDisplay.setText(foundEmployee.getLastName());
//    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmployeeJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmployeeJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmployeeJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmployeeJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EmployeeJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonFilterReset;
    private javax.swing.JButton jButtonFiltrationByDepartment;
    private javax.swing.JButton jButtonFiltrationById;
    private javax.swing.JButton jButtonFiltrationByLastName;
    private javax.swing.JButton jButtonFiltrationByName;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JButton jButtonSearch;
    private javax.swing.JButton jButtonUpdate;
    private javax.swing.JComboBox<String> jComboBoxDepartment;
    private javax.swing.JLabel jLabelId;
    private javax.swing.JLabel jLabelLastName;
    private javax.swing.JLabel jLabelName;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableEmployee;
    private javax.swing.JLabel jTextFieldDepartment;
    private javax.swing.JTextField jTextFieldFiltrationByDepartment;
    private javax.swing.JTextField jTextFieldFiltrationById;
    private javax.swing.JTextField jTextFieldFiltrationByLastName;
    private javax.swing.JTextField jTextFieldFiltrationByName;
    private javax.swing.JTextField jTextFieldId;
    private javax.swing.JTextField jTextFieldLastName;
    private javax.swing.JTextField jTextFieldName;
    // End of variables declaration//GEN-END:variables
}
